"""add currency and interval to subscription_plans

Revision ID: bbdc470572cc
Revises: 32e8cc35544c
Create Date: 2025-08-03 17:23:01.987545

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bbdc470572cc'
down_revision = '32e8cc35544c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscription')
    op.drop_table('subscription_plan')
    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency', sa.String(length=8), nullable=True))
        batch_op.add_column(sa.Column('interval', sa.String(length=16), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.drop_column('interval')
        batch_op.drop_column('currency')

    op.create_table('subscription_plan',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('subscription_plan_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=8), autoincrement=False, nullable=True),
    sa.Column('interval', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='subscription_plan_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('subscription',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('last_payment', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('next_payment', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancelled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plan.id'], name=op.f('subscription_plan_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('subscription_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('subscription_pkey'))
    )
    # ### end Alembic commands ###
