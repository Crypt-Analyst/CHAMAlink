"""Add elected_at and term_end_date to chama_members

Revision ID: f4d2c4066a13
Revises: bbdc470572cc
Create Date: 2025-08-06 19:58:00.556722

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f4d2c4066a13'
down_revision = 'bbdc470572cc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment_method')
    op.drop_table('webhook')
    with op.batch_alter_table('chama_members', schema=None) as batch_op:
        batch_op.add_column(sa.Column('elected_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('term_end_date', sa.DateTime(), nullable=True))

    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.drop_column('interval')
        batch_op.drop_column('currency')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency', sa.VARCHAR(length=8), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('interval', sa.VARCHAR(length=16), autoincrement=False, nullable=True))

    with op.batch_alter_table('chama_members', schema=None) as batch_op:
        batch_op.drop_column('term_end_date')
        batch_op.drop_column('elected_at')

    op.create_table('webhook',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('event', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_triggered', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('webhook_pkey'))
    )
    op.create_table('payment_method',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('is_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('payment_method_pkey')),
    sa.UniqueConstraint('name', name=op.f('payment_method_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
